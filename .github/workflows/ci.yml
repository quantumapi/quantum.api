name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Tests
        run: pytest --maxfail=1 --disable-warnings -q

      - name: Run Linting
        run: |
          pip install flake8
          flake8 quantum_api tests

      - name: Check Test Coverage
        run: |
          pip install coverage
          coverage run -m pytest
          coverage report -m

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: yourdockerhubuser/quantumapi:latest

      - name: Deploy to Production
        run: |
          echo "Deploying to the production environment..."
          # Example: Trigger deployment via SSH or integrate with your orchestration platform (e.g., Kubernetes)
          # ssh deployer@your.production.server 'cd /path/to/deployment && ./deploy.sh'
