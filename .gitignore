# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypi.org/doc/pipenv/latest/basics.html#project-layouts-pipfile-pipfile-lock
#   it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or
#   different dependencies for different platforms, it is a good idea to ignore Pipfile.lock.
#Pipfile.lock

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.env.test
.env.prod
.env.dev

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate repository
#  See: https://github.com/JetBrains/intellij-community/tree/master/python/pycharm-meta
#  And in
#  https://github.com/joeblau/gitignore-io/tree/master/Global/JetBrains.py
#  And
#  https://github.com/github/gitignore/blob/master/Global/JetBrains.py
#  You can just add it to the global gitignore instead, but for a company that adds intellij to the mix
#  of its gitignored global files it is a good idea not to forget to add it for them in your global gitignore
#  template.
#  A link to ignore the PyCharm workspace.xml file can be found at
#  https://intellij-support.jetbrains.com/hc/en-us/community/posts/206532395/comments/206736169
#  However, you may want to uncomment the following line if you don't want to ignore the workspace.xml
#  ------> *.iws

# Python tooling
__pypackages__/
*.dist-info/
*.py[cod]
*.pyo
*.pyd
*.py[co]
*.py[so]
*.pyt
*.pyw
*.pyx
*.pxd
*.pxi
*.pyi

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypi.org/doc/pipenv/latest/basics.html#project-layouts-pipfile-pipfile-lock
#   it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or
#   different dependencies for different platforms, it is a good idea to ignore Pipfile.lock.
#Pipfile.lock

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.env.test
.env.prod
.env.dev

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate repository
#  See: https://github.com/JetBrains/intellij-community/tree/master/python/pycharm-meta
#  And in
#  https://github.com/joeblau/gitignore-io/tree/master/Global/JetBrains.py
#  And
#  https://github.com/github/gitignore/blob/master/Global/JetBrains.py
#  You can just add it to the global gitignore instead, but for a company that adds intellij to the mix
#  of its gitignored global files it is a good idea not to forget to add it for them in your global gitignore
#  template.
#  A link to ignore the PyCharm workspace.xml file can be found at
#  https://intellij-support.jetbrains.com/hc/en-us/community/posts/206532395/comments/206736169
#  However, you may want to uncomment the following line if you don't want to ignore the workspace.xml
#  ------> *.iws

# Python tooling
__pypackages__/
*.dist-info/
*.py[cod]
*.pyo
*.pyd
*.py[co]
*.py[so]
*.pyt
*.pyw
*.pyx
*.pxd
*.pxi
*.pyi

# Node.js
node_modules/
npm-debug.log
yarn-debug.log
yarn-error.log

# Python
__pycache__/
*.py[cod]
*$py.class
*.pyo
*.pyd
*.py[co]
*.py[so]
*.pyt
*.pyw
*.pyx
*.pxd
*.pxi
*.pyi
